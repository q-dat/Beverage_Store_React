import React, { ReactElement } from 'react';
import { IComponentBaseProps, ComponentColor, ComponentSize, ListOrItem } from '../types';
import { SelectOptionProps } from './SelectOption';
export type SelectProps = Omit<React.SelectHTMLAttributes<HTMLSelectElement>, 'size' | 'color'> & IComponentBaseProps & {
    children: ListOrItem<ReactElement<SelectOptionProps>>;
    size?: ComponentSize;
    color?: ComponentColor;
    bordered?: boolean;
    borderOffset?: boolean;
};
declare const _default: React.ForwardRefExoticComponent<Omit<React.SelectHTMLAttributes<HTMLSelectElement>, "size" | "color"> & IComponentBaseProps & {
    children: ListOrItem<React.ReactElement<SelectOptionProps, string | React.JSXElementConstructor<any>>>;
    size?: "lg" | "md" | "sm" | "xs" | undefined;
    color?: "neutral" | "primary" | "secondary" | "accent" | "ghost" | "info" | "success" | "warning" | "error" | undefined;
    bordered?: boolean | undefined;
    borderOffset?: boolean | undefined;
} & React.RefAttributes<HTMLSelectElement>> & {
    Option: ({ children, ...props }: SelectOptionProps) => JSX.Element;
};
export default _default;

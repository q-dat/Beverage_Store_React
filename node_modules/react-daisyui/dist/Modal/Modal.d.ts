import React from 'react';
import { IComponentBaseProps } from '../types';
export type ModalProps = React.HTMLAttributes<HTMLDialogElement> & IComponentBaseProps & {
    open?: boolean;
    responsive?: boolean;
    backdrop?: boolean;
};
export type DialogProps = Omit<ModalProps, 'ref'>;
declare const _default: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDialogElement> & IComponentBaseProps & {
    open?: boolean | undefined;
    responsive?: boolean | undefined;
    backdrop?: boolean | undefined;
} & React.RefAttributes<HTMLDialogElement>> & {
    Header: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
    Body: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
    Actions: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & IComponentBaseProps & React.RefAttributes<HTMLDivElement>>;
    Legacy: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & IComponentBaseProps & {
        open?: boolean | undefined;
        responsive?: boolean | undefined;
        onClickBackdrop?: (() => void) | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    useDialog: () => {
        dialogRef: React.RefObject<HTMLDialogElement>;
        Dialog: {
            ({ children, ...props }: DialogProps): import("react/jsx-runtime").JSX.Element;
            displayName: string;
        };
        handleShow: () => void;
        handleHide: () => void;
    };
};
export default _default;

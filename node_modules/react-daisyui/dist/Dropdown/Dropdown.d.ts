import React, { ReactNode } from 'react';
import { IComponentBaseProps } from '../types';
export type DropdownProps<T extends HTMLElement = HTMLDivElement> = React.HTMLAttributes<T> & IComponentBaseProps & {
    item?: ReactNode;
    horizontal?: 'left' | 'right';
    vertical?: 'top' | 'bottom';
    end?: boolean;
    hover?: boolean;
    open?: boolean;
};
export declare const classesFn: ({ className, horizontal, vertical, end, hover, open, }: Pick<DropdownProps, 'className' | 'horizontal' | 'vertical' | 'end' | 'hover' | 'open'>) => string;
declare const _default: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & IComponentBaseProps & {
    item?: React.ReactNode;
    horizontal?: "left" | "right" | undefined;
    vertical?: "top" | "bottom" | undefined;
    end?: boolean | undefined;
    hover?: boolean | undefined;
    open?: boolean | undefined;
} & React.RefAttributes<HTMLDivElement>> & {
    Details: React.ForwardRefExoticComponent<import("./DropdownDetails").DetailsProps & React.RefAttributes<HTMLDetailsElement>> & {
        Toggle: React.ForwardRefExoticComponent<import("./DropdownToggle").SummaryProps & React.RefAttributes<HTMLElement>>;
    };
    Toggle: ({ children, color, size, button, dataTheme, className, disabled, ...props }: import("./DropdownToggle").DropdownToggleProps) => import("react/jsx-runtime").JSX.Element;
    Menu: ({ dataTheme, className, ...props }: import("./DropdownMenu").DropdownMenuProps) => import("react/jsx-runtime").JSX.Element;
    Item: React.ForwardRefExoticComponent<import("./DropdownItem").DropdownItemProps & React.RefAttributes<HTMLAnchorElement>>;
};
export default _default;
